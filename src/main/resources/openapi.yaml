openapi: 3.0.0
info:
  version: 2.0.0
  title: API системы управления задачами
  contact:
    email: kishko.2003@list.ru
servers:
  - url: http://localhost:8080
    description: Dev server
tags:
  - name: user
    description: Пользователь (все категории пользователей)
  - name: task
    description: Задачи

paths:
 /authenticate:
    post:
      tags:
        - user
      summary: Вход пользователя в систему
      description: Аутентификация пользователя с использованием Bearer Token (токен на предъявителя)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Логин пользователя
                  example: user@user.com
                password:
                  type: string
                  format: password
                  example: password
                  description: Пароль пользователя
      responses:
        '200':
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Bearer Token для дальнейшей аутентификации
                    example: eyJ0eXAwcvvcb1QiLCJhbGciOsdfsUzI1NiJ9.eyJpZCI6IjEzMzciLCJ1c2VybmFtZSI6ImJpem9uZSIswwwfcI6MTU5NDIwOTYwMCwicm9sZSI6InVzZXIifQ.ZvkYYnyM92xvxcvNW9_hSis7_x3_9rymsDcvcbvuOcc1I
                  email:
                    type: string
                    description: Email
                    example: user@user.com
        '401':
          description: Ошибка аутентификации, неверные учетные данные
        '500':
          description: Внутренняя ошибка сервера
          
 /register:
    post:
      tags:
        - user
      summary: Регистрация пользователя в системе
      description: Аутентификация пользователя с использованием Bearer Token (токен на предъявителя)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Логин пользователя
                  example: kishko.2003@list.ru
                password:
                  type: string
                  format: password
                  description: Пароль пользователя
                firstname:
                  type: string
                  description: Имя пользователя
                  example: Дмитрий
                lastname:
                  type: string
                  description: Фамилия пользователя
                  example: Кишко
      responses:
        '200':
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Bearer Token для дальнейшей аутентификации
                    example: eyJ0eXAwcvvcb1QiLCJhbGciOsdfsUzI1NiJ9.eyJpZCI6IjEzMzciLCJ1c2VybmFtZSI6ImJpem9uZSIswwwfcI6MTU5NDIwOTYwMCwicm9sZSI6InVzZXIifQ.ZvkYYnyM92xvxcvNW9_hSis7_x3_9rymsDcvcbvuOcc1I
                  email:
                    type: string
                    description: Email
                    example: kishko.2003@list.ru
        '401':
          description: Ошибка аутентификации, неверные учетные данные
        '500':
          description: Внутренняя ошибка сервера
          
 /tasks:
    post:
      tags:
        - task
      summary: Создание новой задачи
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDTO'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
    get:
      tags:
        - task
      summary: Получение всех задач
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskDTO'
                  
 /tasks/{taskId}:
    get:
      tags:
        - task
      summary: Получение задачи по ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
    put:
      tags:
        - task
      summary: Изменение задачи по ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
    delete:
      tags:
        - task
      summary: Удаление задачи по ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                
 /tasks/add-comment/{taskId}:
    post:
      tags:
        - task
      summary: Добавление комментария к задаче
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: commentText
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
                
 /tasks/user/{userId}:
    get:
      tags:
        - task
      summary: Получение всех задач пользователя по его ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskDTO'
 /tasks/{taskId}/producer/{userId}:
    put:
      tags:
        - task
      summary: Установить исполнителя задачи
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: userId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
 /tasks/{taskId}/delete-producer:
    delete:
      tags:
        - task
      summary: Удалить исполнителя задачи
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
 /tasks/change-status/{taskId}:
    put:
      tags:
        - task
      summary: Установить статус задачи по ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: status
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
                
 /comments:
    post:
      summary: Создание нового комментария
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDTO'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDTO'
    get:
      summary: Получение всех комментариев
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentDTO'
 /comments/{commentId}:
    get:
      summary: Получение комментария по ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDTO'
    put:
      summary: Изменение комментария по ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentDTO'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentDTO'
    delete:
      summary: Удаление комментария по ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
 /comments/task/{taskId}:
    get:
      summary: Получение отфильтрованных и пагинированных комментариев по ID задачи
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
            format: int64
        - in: query
          name: filter
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: size
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentDTO'
          
components:
  schemas:
    TaskDTO:
      type: object
      properties:
        id:
          type: integer 
          format: int64 
        name:
          type: string 
        description:
          type: string 
        status:
          type: string 
        priority:
          type: string 
        authorId:
          type: integer 
          format: int64 
        producerId:
          type: integer 
          format: int64 
    CommentDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
        taskId:
          type: integer
          format: int64

  securitySchemes:
    bearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT